"use strict";function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}var precacheConfig=[["index.html","b5e58ed96bbbf996cf47de54db62e7ff"],["static/css/main.8103835f.css","e16c277db8ab2f839ec75758d8bc9d53"],["static/js/main.81b0d388.js","c2de2299c5efafec0cc5ed3a115ae0a4"],["static/media/ConnectFour.bc71a0f7.png","bc71a0f758840aebfb4567ae30b099ba"],["static/media/GigWrangler.038d0c0e.png","038d0c0ee4f3a1de0353620cbfeee5af"],["static/media/JetFuel.56fd4624.png","56fd462409017c8f989e64f6b6845eff"],["static/media/Resume-edu.ddcba7d1.pdf","ddcba7d1f0f4ec913f53f686fd75d2b4"],["static/media/arrow.7ac08108.png","7ac08108e3a996c0b8fefbde01ad3009"],["static/media/code.a5dc6a2d.svg","a5dc6a2d47b667372e2d53cdd7954c94"],["static/media/computer.c524b7c6.svg","c524b7c604637b0e4aef987ee42cec42"],["static/media/design.53c95c64.svg","53c95c6482088b2066c2f42d4808f023"],["static/media/email-closed.7ee66998.svg","7ee66998c770c5dd86840cb9c9e14659"],["static/media/email-open.95bb7f91.svg","95bb7f91ccd68fb8aff9df7ef6827ace"],["static/media/github-hover.6ac861c1.svg","6ac861c12f5f11ab1511c81e89091d55"],["static/media/github.4765bb0b.svg","4765bb0b48a7201ecc747b861a84dad2"],["static/media/linkedin-logo.154629f2.svg","154629f25d417c8c0a4ac3a83707979a"],["static/media/resume-download.c2a6cd97.svg","c2a6cd9701ef53faebd480230baa2949"],["static/media/testing.8219723d.svg","8219723d5ba6407e04caca678e5a45c7"],["static/media/twitter.28ca8de7.svg","28ca8de76f69df47bb2579c78188494a"],["static/media/workflow.96182fdc.svg","96182fdcd270486957d1f81fe14ece4e"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(t){return new Response(t,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(e,t,a,n){var c=new URL(e);return n&&c.pathname.match(n)||(c.search+=(c.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),c.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return t.every(function(t){return!t.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],n=new URL(t,self.location),c=createCacheKey(n,hashParamName,a,/\.\w{8}\./);return[n.toString(),c]}));self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var n=new Request(a,{credentials:"same-origin"});return fetch(n).then(function(t){if(!t.ok)throw new Error("Request for "+a+" returned a response with status "+t.status);return cleanResponse(t).then(function(t){return e.put(a,t)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(a){return Promise.all(a.map(function(a){if(!t.has(a.url))return e.delete(a)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var t,a=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching);t=urlsToCacheKeys.has(a);t||(a=addDirectoryIndex(a,"index.html"),t=urlsToCacheKeys.has(a));!t&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(a=new URL("/portfolio-website/index.html",self.location).toString(),t=urlsToCacheKeys.has(a)),t&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(t){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,t),fetch(e.request)}))}});